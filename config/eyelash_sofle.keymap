#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        hrm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };        
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp CAPS    &kp N1         &kp N2        &kp N3          &kp N4        &kp N5       &kp UP_ARROW     &kp N6          &kp N7          &kp N8         &kp N9       &kp N0          &kp MINUS
&kp TAB     &kp Q          &kp W         &kp E           &kp R         &kp T        &kp DOWN_ARROW   &kp Y           &kp U           &kp I          &kp O        &kp P           &kp BSLH
&kp ESC     &hrm LGUI A    &hrm LALT S   &hrm LSHIFT D   &hrm LCTRL F  &kp G        &kp LEFT_ARROW   &kp H           &hrm RCTRL J    &hrm RSHIFT K  &hrm RALT L   &hrm RGUI SEMI   &kp APOS
&kp GRAVE   &kp Z          &kp X         &kp C           &kp V         &kp B        &kp RIGHT_ARROW  &kp N           &kp M           &kp COMMA      &kp DOT      &kp FSLH        &kp EQUAL
&kp C_MUTE  &kp C_VOL_DN   &kp C_VOL_UP  &mo 1           &kp DELETE    &kp SPACE    &kp ENTER        &kp ENTER       &kp BACKSPACE   &mo 2          &kp LBKT     &kp RBKT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "layer0";
        };

        layer_1 {
            bindings = <
&trans   &kp F1            &kp F2          &kp F3           &kp F4           &kp F5            &mmv MOVE_UP     &kp F6           &kp F7           &kp F8            &kp F9            &kp F10           &kp F11
&trans   &trans            &mkp LCLK       &mkp MCLK        &mkp RCLK        &trans            &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP            &kp HOME          &kp INSERT        &kp F12
&trans   &trans            &trans          &trans           &trans           &trans            &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN          &kp RIGHT         &trans            &trans
&trans   &rgb_ug RGB_TOG   &rgb_ug RGB_EFF &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD   &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI   &rgb_ug RGB_HUD   &rgb_ug RGB_SAI   &rgb_ug RGB_SAD
&trans   &trans            &trans          &trans           &trans           &trans            &mkp LCLK        &trans           &trans           &trans            &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&trans   &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans   &trans   &trans   &trans
&trans   &bt BT_CLR     &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &trans   &trans   &trans   &trans
&trans   &out OUT_USB   &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans   &trans   &trans   &trans
&trans   &trans         &trans          &trans        &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &trans   &trans   &trans   &trans
&trans   &trans         &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans   &trans   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "layer2";
        };

    };
};
